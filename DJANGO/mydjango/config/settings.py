"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from environ import Env
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = Env()

ENV_PATH = BASE_DIR / ".env"
env.read_env(ENV_PATH, overwrite=True)

# config/settings.py

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-coe^cdjtt_gvtlcrulucxboqj@fx__udnvjh4jixc_#v&vvz-c"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = env.list(
    "ALLOWED_HOSTS", 
    default=["127.0.0.1"],
    )


# Application definition

INSTALLED_APPS = [
    # django apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # third apps
    # "debug_toolbar",
    "django_bootstrap5",
    "django_extensions",
    "rest_framework",
    # local apps
    "accounts",
    "baemin",
    "blog",
    "chat",
    "melon",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # 여기에 넣자
        "DIRS": [
            BASE_DIR / "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# import os
# os.environ["OPENAI_API_KEY"]

# 위는 파이썬에서 기본으로 지원하는 환경변수 조회하는 것
# 아래는 django-environ을 사용하여 환경변수 조회하는 것
# django-environ을 통해서 환경변수 조회 : 장고 친화적인 기능이 많다

# 환경변수에 OPENAI_API_KEY가 있으면 반환, 없으면 NONE
OPENAI_API_KEY = env.str("OPENAI_API_KEY", default=None)
# 환경변수에 UPSTAGEAI_API_KEY가 있으면 반환, 없으면 NONE
UPSTAGE_API_KEY = env.str("UPSTAGE_API_KEY", default=None)

# django-debug-toolbar를 보여줄 아이피
#  - 장고 서버를 구동한 컴퓨터에서 직접 접속했을 때에만 DDT를 보여주겠다.
#  - 다른 컴퓨터에서 접속했을 때에는 DDT가 보여지지 않아요.
INTERNAL_IPS = ["127.0.0.1"]

# DDT 추가 설정
#  - 기본 구성으로는 inter ips에 지정된 주소로 접속했을 때는 무조건 보여준다
#  - 커스텀으로 파이썬 함수를 통해 보여줄 지 말지 결정해줄 수 있다
#  - ngrok을 통한 요청인지 여부를 판단해서 결정해줄 수 있음

# REST_FRAMEWORK = {
#     'DEFAULT_RENDERER_CLASSES': [
#         'rest_framework.renderers.JSONRenderer',
#         # 'rest_framework.renderers.BrowsableAPIRenderer',
#     ]
# }



if DEBUG:
    INSTALLED_APPS += [
        'debug_toolbar',
    ]

    MIDDLEWARE = [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ] + MIDDLEWARE

    DEFAULT_RENDERER_CLASSES = [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'blog.renderers.PandasXlsxRenderer'
    ]

else:
    DEFAULT_RENDERER_CLASSES = [
        'rest_framework.renderers.JSONRenderer',
        'blog.renderers.PandasXlsxRenderer'
    ]

# <a href="/blog/api/v1/posts/?format=xlsx">엑셀 다운로드</a>
# rederer를 이용하면 이렇게 a태그 이용해서 엑설파일 다운로드하기 가능

# django rest framework
# https://www.django-rest-framework.org/api-guide/renderers/


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': DEFAULT_RENDERER_CLASSES,

    # 페이지 크기 전역 설정
    "PAGE_SIZE": env.int("REST_FRAMEWORK_PAGE_SIZE", default=10),
    # 페이지네이션 전역 설정
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_PAGINATION_CLASS": "blog.pagination.PkCursorPagination",
}


